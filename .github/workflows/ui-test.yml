name: UI Tests
on:
  ## Check each PR
  push:
  pull_request:
  ## Manual execution on branch
  workflow_dispatch:
  ## Nightly
  ### Needs secrets
  #### GC_PROJECT_ID
  #### GC_SERVICE_KEY
  #### NIGHTLY_TOKEN
  schedule:
    - cron: '0 0 * * *'
env:
  CAMPAIGN: 'ps_emailalerts'
jobs:
  ui_test:
    name: UI Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - PS_VERSION: '1.7.7.8'
            PHP_VERSION: '7.3'
          - PS_VERSION: '1.7.8.11'
            PHP_VERSION: '7.4'
          - PS_VERSION: '8.0.5'
            PHP_VERSION: '8.1'
          - PS_VERSION: '8.1.6'
            PHP_VERSION: '8.1'
          - PS_VERSION: 'nightly'
            PHP_VERSION: '8.2'
    env:
      PS_VERSION: ${{ matrix.PS_VERSION }}
      PHP_VERSION: ${{ matrix.PHP_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Rights
        run: chmod -R 777 ./mails

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.PHP_VERSION }}

      - name: Install dependencies
        run: composer install --no-dev && composer dump-autoload -o --no-dev

      - name: Start containers
        working-directory: tests/UI/
        run: |
          docker compose -f "docker-compose.yml" up -d --build
          bash -c 'while [[ "$(curl -L -s -o /dev/null -w %{http_code} http://localhost/en/)" != "200" ]]; do sleep 5; done'
      
      - name: Install dependencies
        working-directory: tests/UI/
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: tests/UI/
        run: npx playwright install chromium --with-deps

      - name: Run Playwright tests
        working-directory: tests/UI/
        run: npx playwright test

      - name: Export Docker errors
        working-directory: tests/UI/
        if: always()
        run: docker compose logs --no-color >& docker-compose.log

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.PS_VERSION }}
          path: |
            tests/UI/reports/
            tests/UI/report.json
            tests/UI/docker-compose.log
          retention-days: 30

  nightly:
    name: Nightly Report
    if: ${{ github.event_name == 'schedule' }}
    needs:
      - ui_test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PS_VERSION:
          - '1.7.7.8' 
          - '1.7.8.11' 
          - '8.0.5' 
          - '8.1.6'
          - 'nightly'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-${{ matrix.PS_VERSION }}
          path: tests/UI/

      # Nightly : Rename file
      - name: "Nightly : Rename file"
        working-directory: tests/UI/
        run: |
          mkdir -p nightly
          REPORT_NAME="${{ env.CAMPAIGN }}_$(date +%Y-%m-%d)-${{ matrix.PS_VERSION }}"
          mv report.json nightly/${REPORT_NAME}.json

      # Nightly : Auth GCP
      - name: "Nightly : Auth GCP"
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GC_SERVICE_KEY }}
          project_id: ${{ secrets.GC_PROJECT_ID }}

      # Nightly : Setup GCP
      - name: "Nightly : Setup GCP"
        uses: google-github-actions/setup-gcloud@v1

      # Nightly : Upload to Google Cloud Storage (GCS)
      - name: "Nightly : Upload to Google Cloud Storage (GCS)"
        working-directory: tests/UI/
        run: gsutil cp -r "nightly/**" gs://prestashop-core-nightly/reports

      # Nightly : Push Report
      - name: "Nightly : Push Report"
        run: |
          REPORT_NAME="${{ env.CAMPAIGN }}_$(date +%Y-%m-%d)-${{ matrix.PS_VERSION }}"
          curl -v "https://api-nightly.prestashop-project.org/import/report/playwright?token=${{ secrets.NIGHTLY_TOKEN }}&filename=${REPORT_NAME}.json&campaign=${{ env.CAMPAIGN }}&platform=chromium"